

export SHELL_NAME="[lcs]$(echo $SHELL_NAME | sed -s 's/\[lcs\]//g')"



function mk()
{
  omake  2>&1 | \
  sed -e 's/\(Warning\)/\x1b[31;1m\1\x1b[0m/g' | \
  sed -e 's/\( line [0-9]\+\)/\x1b[32;1m\1\x1b[0m/g' | \
  sed -e 's/\<\([A-Z0-9a-z_\.]\+\.mli\?\)\>/\x1b[32m\1\x1b[0m/g' | \
  sed -e 's/\<\([A-Z0-9a-z_\.]\+\.c\)\>/\x1b[33m\1\x1b[0m/g'
}
alias mku='omake -U'
alias cln='omake clean'
function svns ()
{
  svn stat -u $* | sort | \
    sed -e 's/^\(M.*\)/\x1b[32;1m\1\x1b[0m/g' | \
    sed -e 's/^\(A.*\)/\x1b[32;1m\1\x1b[0m/g' | \
    sed -e 's/^\(D.*\)/\x1b[33;1m\1\x1b[0m/g' | \
    sed -e 's/^\(G.*\)/\x1b[31;1m\1\x1b[0m/g' 
}

function docbro ()
{ 
  ocamlfind ocamlbrowser -package \
  unix,extlib,threads.posix,lablgtk2,lablgtk2.glade,lablgtk2.init,xml-light &
}

function lcsrun ()
{
  ./src/locoseq -gui -song test/one_song.xml -jackname lcs_test &
  if [ "$1" != "" ]
  then
    FLUID=$(jack_lsp | grep "$1")
    sleep 1
    jack_connect 'lcs_test:out_00' "$FLUID"
  fi
}

