
APP_NAME= locoseq

## JACK-MIDI Interface:

JACK_VERSION=$(shell pkg-config --modversion jack)
JACK_VERSION_FIRST=$(shell \
    echo "$(JACK_VERSION)" | sed 's/\([^.]*\)\.[^.]*\.[^.]*/\1/')
JACK_VERSION_SECOND=$(shell \
    echo "$(JACK_VERSION)" | sed 's/[^.]*\.\([^.]*\)\.[^.]*/\1/')

JACK_MIDI_COMPATIBILTY="not-set-so-that-compilation-fails"
if $(and $(equal $(JACK_VERSION_FIRST), 0), $(lt $(JACK_VERSION_SECOND), 105))
  JACK_MIDI_COMPATIBILTY=-DJACK_MIDI_NEEDS_NFRAMES=$(JACK_VERSION_SECOND)
  export
else
  JACK_MIDI_COMPATIBILTY=
  export

## OCamlFind's packages:

FIND_LABLGTK2=$(shell ocamlfind list | grep lablgtk2 | awk '{ print $$1 }')
OCAMLPACKS[] = unix threads.posix $(FIND_LABLGTK2) xml-light

## Code documentation:

DOC_SOURCES=src/midi.ml src/log.ml src/jackSequencer.ml src/tracker.ml src/inputManager.ml src/midiFile.ml src/stringServer.ml src/seqApp.ml src/guiEditor.ml src/gui.ml src/main.ml
HTML_DIR=doc/ref/html
LATEX_DIR=doc/ref/latex
CODEDOC_CSS=codedoc.css

## Some targets:
.PHONY: clean install package  codedoc

clean: # The Big clean:
  find . \
  -name "*.cmo" -o \
  -name "*.cmxa" -o \
  -name "*.cma" -o \
  -name "*.cmi" -o \
  -name "*.cmx" -o \
  -name "*.o" -o \
  -name "*.so" -o \
  -name "*.a" -o \
  -name "*.annot" -o \
  -name "*.omc" -o \
  -name "*.opt" -o \
  -name "$(APP_NAME)" -o \
  -name ".omakedb*"  | xargs rm -f 
  rm -f $(HTML_DIR)/*.html
  echo "Cleaned "


MakePackage ()=
  DATE_FOR_NAME = $(shell date +"%Y-%m-%d_%Hh%Mm%S")
  DIR_NAME = $(APP_NAME)_$(DATE_FOR_NAME)
  mkdir $(DIR_NAME)
  mkdir $(DIR_NAME)/src
  mkdir $(DIR_NAME)/src/gui_files
  mkdir $(DIR_NAME)/test/
  cp  src/*.ml src/*.c src/OMakefile $(DIR_NAME)/src/
  cp  src/gui_files/app.glade  $(DIR_NAME)/src/gui_files/
  cp  test/*  $(DIR_NAME)/test/
  cp  OMakefile OMakeroot README license.mit $(DIR_NAME)/
  tar cvfz $(DIR_NAME).tar.gz $(DIR_NAME)
  rm -rf $(DIR_NAME)

package:
  MakePackage ()
 

codedoc: $(DOC_SOURCES)
  ocamlfind ocamldoc -package $(concat \,, $(OCAMLPACKS)) -d $(HTML_DIR) -I build/\
  -html -css-style $(CODEDOC_CSS) -colorize-code $(DOC_SOURCES)


if $(not $(file-exists build/))
    mkdir -p build/
vmount(-l, src, build)
.SUBDIRS: build

.SUBDIRS: doc/manual/src/



